<?xml version="1.0" encoding="UTF-8"?>
<ISUI>
 <window name='EVEBot'>
  <Visible>1</Visible>
  <BackGroundColor></BackGroundColor>
  <Border>0</Border>
  <X>200</X>
  <Y>10</Y>
  <Width>500</Width>
  <Height>370</Height>
  <Title>EVEBot Options</Title>

  <TitleBar template='EVESkin.Window.TitleBar'>
   <Width>100%</Width>
   <Height>20</Height>
   <Border>0</Border>
   <Children>
    <commandbutton name='Run EVEBot' template='EVESkin.Window.TitleBar.RunButton'>
     <OnLeftClick>
      Script[EVEBot]:Resume
      Script[EVEBot].VariableScope.EVEBot:Resume
      Echo EVEBot: Resumed
     </OnLeftClick>
    </commandbutton>
    <commandbutton name='Pause EVEBot' template='EVESkin.Window.TitleBar.PauseButton'>
     <OnLeftClick>
      EVE:Execute[CmdStopShip]
      Script[EVEBot]:Pause
      Script[EVEBot].VariableScope.EVEBot:Pause
      Echo EVEBot: Paused
     </OnLeftClick>
    </commandbutton>
    <text name='EVEBot_TitleBar_Title' template='EVESkin.Font.TitleBar'>
     <X>200</X>
     <Y>8</Y>
     <Width>170</Width>
     <Height>20</Height>
     <Text>EVEBot Stable Vorc...v.1.2</Text>
    </text>
    <button Name='Minimize' template='EVESkin.Window.TitleBar.Minimize'>
     <OnLeftClick>
      UIElement[EVEBot].FindUsableChild[TitleBotStatus,text]:Show
      UIElement[EVEBot].FindUsableChild[TitleBotStatusCap,text]:Show
      UIElement[EVEBot].FindUsableChild[TitleBotXPStatus,text]:Show
      UIElement[EVEBot].FindUsableChild[TitleBotXPCap,text]:Show
     </OnLeftClick>
    </button>
    <button Name='Maximize' template='EVESkin.Window.TitleBar.Minimize'>
     <OnLeftClick>
      UIElement[EVEBot].FindUsableChild[TitleBotStatus,text]:Hide
      UIElement[EVEBot].FindUsableChild[TitleBotXPStatus,text]:Hide
      UIElement[EVEBot].FindUsableChild[TitleBotXPCap,text]:Hide
      UIElement[EVEBot].FindUsableChild[TitleBotStatusCap,text]:Hide
     </OnLeftClick>
    </button>
    <button Name='Close' template='EVESkin.Window.TitleBar.Close'>
     <OnLeftClick>
          evebot_crashed:Set[FALSE]
      endscript EVEBot
     </OnLeftClick>
    </button>
   </Children>
  </TitleBar>


  <Children name="EVEBot_Children">
   <button Name='empty1' template='EVESkin.Window.Empty'>
   </button>
   <TabControl Name='EVEBotOptionsTab' template='EVESkin.TabControl'>
    <X>0</X>
    <Y>8</Y>
    <Width>100%</Width>
    <Height>100%</Height>
    <Tabs>
     <Tab Name='Status'>
       <text name='script_runtime'>
        <X>10</X>
        <Y>10</Y>
        <Width>115</Width>
        <Height>20</Height>
        <Text>Script Runtime:</Text>
       </text>
       <Text name='script_runtime_data' template='EVESkin.Font.Value'>
        <X>150</X>
        <Y>10</Y>
        <Width>100</Width>
        <Height>20</Height>
        <Text>${Script[EVEBot].VariableScope.UI.Runtime}</Text>
       </Text>

       <text name='state' template='EVESkin.Font.Description'>
        <X>10</X>
        <Y>30</Y>
        <Width>100</Width>
        <Height>20</Height>
        <Text>Action:</Text>
       </text>
       <text name='state_data' template='EVESkin.Font.Value'>
        <X>150</X>
        <Y>30</Y>
        <Width>100</Width>
        <Height>20</Height>
        <text>${Script[EVEBot].VariableScope.Config.Common.BotModeName}</text>
       </text>
       <console Name="StatusConsole" template='EVESkin.Console'>
        <X>5</X>
        <Y>r280</Y>
        <Width>97.5%</Width>
        <Height>270</Height>
       </console>
     </Tab>

     <Tab Name='Main'>
      <Text name='EVEBotModeLabel'>
       <X>10</X>
       <Y>20</Y>
       <Width>70</Width>
       <Height>10</Height>
       <Text>Bot Mode</Text>
      </Text>
      <combobox name='EVEBotMode'>
       <X>80</X>
       <Y>20</Y>
       <Width>250</Width>
       <Height>15</Height>
       <FullHeight>200</FullHeight>
       <ButtonWidth>18</ButtonWidth>
       <Items>
        <Item Value='1'>Ratter</Item>

       </Items>
       <OnSelect>
        Script[EVEBot].VariableScope.Config.Common:SetBotMode[${This.SelectedItem.Value}]
        Script[EVEBot].VariableScope.Config.Common:SetBotModeName[${This.SelectedItem.Text}]
       </OnSelect>
       <OnLoad>
        This:SetSelection[${Script[EVEBot].VariableScope.Config.Common.BotMode}]
       </OnLoad>
      </combobox>
      <Textentry name='MinimumDronesInBay'>
       <X>10</X>
       <Y>50</Y>
       <Width>32</Width>
       <Height>18</Height>
       <MaxLength>2</MaxLength>
       <OnLoad>
        This:SetText[${Script[EVEBot].VariableScope.Config.Common.DronesInBay}]
       </OnLoad>
       <OnChange>
        if ${This.Text.Length} > 0
        {
         Script[EVEBot].VariableScope.Config.Common:SetDronesInBay[${Int[${This.Text}]}]
        }
       </OnChange>
      </Textentry>
      <Text name='MinimumDronesInBayText'>
       <X>44</X>
       <Y>57</Y>
       <Width>200</Width>
       <Height>10</Height>
       <Text>Minimum Drones in Bay</Text>
       <AutoTooltip>This will set the amount of drones you want in your drone bay.</AutoTooltip>
      </Text>
      <checkbox Name='cbAutoLogin'>
       <X>10</X>
       <Y>80</Y>
       <Height>20</Height>
       <Width>100</Width>
       <Text>Auto Login</Text>
       <AutoTooltip>Auto Login when at Login window</AutoTooltip>
       <OnLoad>
        if ${Script[EVEBot].VariableScope.Config.Common.AutoLogin}
        {
         This:SetChecked
        }
       </OnLoad>
       <OnLeftClick>
         Script[EVEBot].VariableScope.Config.Common:SetAutoLogin[${This.Checked}]
       </OnLeftClick>
      </checkbox>
      <Text name='LoginNameText'>
       <X>10</X>
       <Y>102</Y>
       <Width>100</Width>
       <Height>18</Height>
       <Text>EVE Login</Text>
       <AutoTooltip>The EVE Login name for ${_Me.Name}</AutoTooltip>
      </Text>
      <Textentry name='LoginName'>
       <X>140</X>
       <Y>100</Y>
       <Width>100</Width>
       <Height>18</Height>
       <MaxLength>25</MaxLength>
       <OnLoad>
        This:SetText[${Script[EVEBot].VariableScope.Config.Common.LoginName}]
       </OnLoad>
       <OnChange>
        if ${This.Text.Length} > 0
        {
         Script[EVEBot].VariableScope.Config.Common:SetLoginName[${This.Text}]
        }
       </OnChange>
      </Textentry>
      <Text name='LoginPasswordText'>
       <X>10</X>
       <Y>122</Y>
       <Width>100</Width>
       <Height>18</Height>
       <Text>EVE Password</Text>
       <AutoTooltip>The EVE Login Password for ${_Me.Name}</AutoTooltip>
      </Text>
      <Textentry name='LoginPassword'>
       <X>140</X>
       <Y>120</Y>
       <Width>100</Width>
       <Height>18</Height>
       <MaxLength>25</MaxLength>
       <PasswordCharacter>*</PasswordCharacter>
       <OnLoad>
        This:SetText[${Script[EVEBot].VariableScope.Config.Common.LoginPassword}]
       </OnLoad>
       <OnChange>
        if ${This.Text.Length} > 0
        {
         Script[EVEBot].VariableScope.Config.Common:SetLoginPassword[${This.Text}]
        }
       </OnChange>
      </Textentry>

      <Text name='lblMaxRuntime'>
       <X>10</X>
       <Y>152</Y>
       <Width>130</Width>
       <Height>18</Height>
       <Text>Maximum Runtime</Text>
       <AutoTooltip>The maximum time to run the script before it aborts.</AutoTooltip>
      </Text>
      <Textentry name='tbMaxRuntime'>
       <X>140</X>
       <Y>150</Y>
       <Width>40</Width>
       <Height>18</Height>
       <MaxLength>5</MaxLength>
       <OnLoad>
        This:SetText[${Script[EVEBot].VariableScope.Config.Common.MaxRuntime}]
       </OnLoad>
       <OnChange>
        if ${This.Text.Length} > 0
        {
         Script[EVEBot].VariableScope.Config.Common:SetMaxRuntime[${Int[${This.Text}]}]
        }
       </OnChange>
      </Textentry>

      <checkbox Name='cbUseSound'>
       <X>10</X>
       <Y>180</Y>
       <Height>20</Height>
       <Width>100</Width>
       <Text>Enable sound</Text>
       <AutoTooltip>Enable audio events</AutoTooltip>
       <OnLoad>
        if ${Script[EVEBot].VariableScope.Config.Common.UseSound}
        {
         This:SetChecked
        }
       </OnLoad>
       <OnLeftClick>
         Script[EVEBot].VariableScope.Config.Common:SetUseSound[${This.Checked}]
       </OnLeftClick>
      </checkbox>
      <checkbox Name='cbDisable3D'>
       <X>110</X>
       <Y>180</Y>
       <Height>20</Height>
       <Width>100</Width>
       <Text>Disable 3D Rendering</Text>
       <AutoTooltip>Disable EVE 3D Rendering</AutoTooltip>
       <OnLoad>
        if ${Script[EVEBot].VariableScope.Config.Common.Disable3D}
        {
         This:SetChecked
        }
       </OnLoad>
       <OnLeftClick>
         Script[EVEBot].VariableScope.Config.Common:SetDisable3D[${This.Checked}]
       </OnLeftClick>
      </checkbox>
     </Tab>



     <Tab name='Combat'>

      <slider name='MinShieldPct'>
       <X>10</X>
       <Y>10</Y>
       <Width>40</Width>
       <Height>18</Height>
       <Range>100</Range>
       <OnLoad>
        This:SetValue[${Script[EVEBot].VariableScope.Config.Combat.MinimumShieldPct}]
        UIElement[MinShieldPctLabel@Combat@EvEBotOptionsTab@EVEBot]:SetText["Minimum Shield: ${This.Value}"]
       </OnLoad>
       <OnChange>
        Script[EVEBot].VariableScope.Config.Combat:SetMinimumShieldPct[${Int[${This.Value}]}]
        UIElement[MinShieldPctLabel@Combat@EvEBotOptionsTab@EVEBot]:SetText["Minimum Shield: ${This.Value}"]
       </OnChange>
      </slider>
      <Text name='MinShieldPctLabel'>
       <X>55</X>
       <Y>12</Y>
       <Width>150</Width>
       <Height>10</Height>
       <Text>Minimum Shield: 0</Text>
       <AutoTooltip>Lowest Shield Pct Allowed before Running</AutoTooltip>
       <OnLoad>
        This:SetText["Minimum Shield: ${UIElement[MinShieldPct@Combat@EvEBotOptionsTab@EVEBot].Value}"]
       </OnLoad>
      </Text>

      <slider name='MinArmorPct'>
       <X>10</X>
       <Y>30</Y>
       <Width>40</Width>
       <Height>18</Height>
       <Range>100</Range>
       <OnLoad>
        This:SetValue[${Script[EVEBot].VariableScope.Config.Combat.MinimumArmorPct}]
        UIElement[MinArmorPctLabel@Combat@EvEBotOptionsTab@EVEBot]:SetText["Minimum Armor: ${This.Value}"]
       </OnLoad>
       <OnChange>
        Script[EVEBot].VariableScope.Config.Combat:SetMinimumArmorPct[${Int[${This.Value}]}]
        UIElement[MinArmorPctLabel@Combat@EvEBotOptionsTab@EVEBot]:SetText["Minimum Armor: ${This.Value}"]
       </OnChange>
      </slider>
      <Text name='MinArmorPctLabel'>
       <X>55</X>
       <Y>32</Y>
       <Width>150</Width>
       <Height>10</Height>
       <Text>Minimum Armor: 0</Text>
       <AutoTooltip>Lowest armor percent allowed before fleeing</AutoTooltip>
       <OnLoad>
        This:SetText["Minimum Armor: ${UIElement[MinArmorPct@Combat@EvEBotOptionsTab@EVEBot].Value}"]
       </OnLoad>
      </Text>

      <slider name='MinCapPct'>
       <X>10</X>
       <Y>50</Y>
       <Width>40</Width>
       <Height>18</Height>
       <Range>100</Range>
       <OnLoad>
        This:SetValue[${Script[EVEBot].VariableScope.Config.Combat.MinimumCapPct}]
        UIElement[MinCapPctLabel@Combat@EvEBotOptionsTab@EVEBot]:SetText["Minimum Cap: ${This.Value}"]
       </OnLoad>
       <OnChange>
        Script[EVEBot].VariableScope.Config.Combat:SetMinimumCapPct[${Int[${This.Value}]}]
        UIElement[MinCapPctLabel@Combat@EvEBotOptionsTab@EVEBot]:SetText["Minimum Cap: ${This.Value}"]
       </OnChange>
      </slider>
      <Text name='MinCapPctLabel'>
       <X>55</X>
       <Y>52</Y>
       <Width>150</Width>
       <Height>10</Height>
       <Text>Minimum Cap: 0</Text>
       <AutoTooltip>Lowest capacitor percent allowed before fleeing</AutoTooltip>
       <OnLoad>
        This:SetText["Minimum Cap: ${UIElement[MinCapPct@Combat@EvEBotOptionsTab@EVEBot].Value}"]
       </OnLoad>
      </Text>

      <Frame name='frmDefenceOptions'>
       <X>5</X>
       <Y>5</Y>
       <Height>195</Height>
       <Width>48%</Width>
       <Border>1</Border>
       <Children>

        <checkbox name='cbAlwaysShieldBoost'>
         <X>10</X>
         <Y>70</Y>
         <Height>20</Height>
         <Width>100</Width>
         <Text>Always Shield Boost</text>
         <AutoTooltip>Turn Shield Booster on full-time, instead of on-demand.</AutoTooltip>
         <OnLoad>
          if ${Script[EVEBot].VariableScope.Config.Combat.AlwaysShieldBoost}
          {
           This:SetChecked
          }
         </OnLoad>
         <OnLeftClick>
          Script[EVEBot].VariableScope.Config.Combat:SetAlwaysShieldBoost[${This.Checked}]
         </OnLeftClick>
        </checkbox>

        <checkbox name='cbAlwaysArmorBoost'>
         <X>10</X>
         <Y>90</Y>
         <Height>20</Height>
         <Width>100</Width>
         <Text>Always Armor Boost</text>
         <AutoTooltip>Turn Armor Booster on full-time, instead of on-demand.</AutoTooltip>
         <OnLoad>
          if ${Script[EVEBot].VariableScope.Config.Combat.AlwaysArmorBoost}
          {
           This:SetChecked
          }
         </OnLoad>
         <OnLeftClick>
          Script[EVEBot].VariableScope.Config.Combat:SetAlwaysArmorBoost[${This.Checked}]
         </OnLeftClick>
        </checkbox>

        <checkbox name='cbRunOnLowCap'>
         <X>10</X>
         <Y>110</Y>
         <Height>20</Height>
         <Width>100</Width>
         <Text>Run Safe On Low Cap</text>
         <AutoTooltip>If checked, run to safe spot when capacitor is empty.</AutoTooltip>
         <OnLoad>
          if ${Script[EVEBot].VariableScope.Config.Combat.RunOnLowCap}
          {
           This:SetChecked
          }
         </OnLoad>
         <OnLeftClick>
           Script[EVEBot].VariableScope.Config.Combat:SetRunOnLowCap[${This.Checked}]
         </OnLeftClick>
        </checkbox>
        <checkbox name='cbRunOnLowTank'>
         <X>10</X>
         <Y>130</Y>
         <Height>20</Height>
         <Width>100</Width>
         <Text>Run Safe On Low Tank</text>
         <AutoTooltip>If checked, run to safe spot when tank (shield or armor) has failed.</AutoTooltip>
         <OnLoad>
          if ${Script[EVEBot].VariableScope.Config.Combat.RunOnLowTank}
          {
           This:SetChecked
          }
         </OnLoad>
         <OnLeftClick>
           Script[EVEBot].VariableScope.Config.Combat:SetRunOnLowTank[${This.Checked}]
         </OnLeftClick>
        </checkbox>
        <checkbox name='cbGameOverShield'>
         <X>10</X>
         <Y>150</Y>
         <Height>20</Height>
         <Width>100</Width>
         <Text>GameOver : Min.Shield:</text>
         <AutoTooltip>If checked, use exit from EVE.</AutoTooltip>
         <OnLoad>
          if ${Script[EVEBot].VariableScope.Config.Combat.GameOverShield}
          {
           This:SetChecked
          }
         </OnLoad>
         <OnLeftClick>
          Script[EVEBot].VariableScope.Config.Combat:SetGameOverShield[${This.Checked}]
         </OnLeftClick>
        </checkbox>

        <Textentry name='tbGameOverShieldTrashHold'>
         <X>160</X>
         <Y>150</Y>
         <Width>25</Width>
         <Height>18</Height>
         <MaxLength>3</MaxLength>
         <OnLoad>
          This:SetText[${Script[EVEBot].VariableScope.Config.Combat.GameOverShieldTrashHold}]
         </OnLoad>
         <OnChange>
          if ${This.Text.Length} > 0
          {
           Script[EVEBot].VariableScope.Config.Combat:SetGameOverShieldTrashHold[${Int[${This.Text}]}]
          }
         </OnChange>
        </Textentry>

        <checkbox name='cbGameOverArmor'>
         <X>10</X>
         <Y>170</Y>
         <Height>20</Height>
         <Width>100</Width>
         <Text>GameOver : Min.Armor:</text>
         <AutoTooltip>If checked, use exit from EVE.</AutoTooltip>
         <OnLoad>
          if ${Script[EVEBot].VariableScope.Config.Combat.GameOverArmor}
          {
           This:SetChecked
          }
         </OnLoad>
         <OnLeftClick>
          Script[EVEBot].VariableScope.Config.Combat:SetGameOverArmor[${This.Checked}]
         </OnLeftClick>
        </checkbox>

        <Textentry name='tbGameOverArmorTrashHold'>
         <X>160</X>
         <Y>170</Y>
         <Width>25</Width>
         <Height>18</Height>
         <MaxLength>3</MaxLength>
         <OnLoad>
          This:SetText[${Script[EVEBot].VariableScope.Config.Combat.GameOverArmorTrashHold}]
         </OnLoad>
         <OnChange>
          if ${This.Text.Length} > 0
          {
           Script[EVEBot].VariableScope.Config.Combat:SetGameOverArmorTrashHold[${Int[${This.Text}]}]
          }
         </OnChange>
        </Textentry>

       </Children>
      </Frame>

      <Frame name='frmRunOptions'>
       <X>50%</X>
       <Y>5</Y>
       <Height>195</Height>
       <Width>49%</Width>
       <Border>1</Border>
       <Children>
        <checkbox name='cbRunToStation'>
         <X>10</X>
         <Y>10</Y>
         <Height>20</Height>
         <Width>100</Width>
         <Text>Run To Station</text>
         <AutoTooltip>If checked, run to a station instead of a safe-spot.</AutoTooltip>
         <OnLoad>
          if ${Script[EVEBot].VariableScope.Config.Combat.RunToStation}
          {
           This:SetChecked
          }
         </OnLoad>
         <OnLeftClick>
           Script[EVEBot].VariableScope.Config.Combat:SetRunToStation[${This.Checked}]
         </OnLeftClick>
        </checkbox>
        <checkbox name='cbUseWhiteList'>
         <X>10</X>
         <Y>30</Y>
         <Height>20</Height>
         <Width>100</Width>
         <Text>Run Safe On Non-Whitelisted Pilot</text>
         <AutoTooltip>If checked, run to safe spot when any non-whitelisted pilot enters system.</AutoTooltip>
         <OnLoad>
          if ${Script[EVEBot].VariableScope.Config.Combat.UseWhiteList}
          {
           This:SetChecked
          }
         </OnLoad>
         <OnLeftClick>
           Script[EVEBot].VariableScope.Config.Combat:SetUseWhiteList[${This.Checked}]
         </OnLeftClick>
        </checkbox>

        <checkbox name='cbUseBlackList'>
         <X>10</X>
         <Y>50</Y>
         <Height>20</Height>
         <Width>100</Width>
         <Text>Run Safe On Blacklisted Pilot</text>
         <AutoTooltip>If checked, run to safe spot when any blacklisted pilot enters system.</AutoTooltip>
         <OnLoad>
          if ${Script[EVEBot].VariableScope.Config.Combat.UseBlackList}
          {
           This:SetChecked
          }
         </OnLoad>
         <OnLeftClick>
           Script[EVEBot].VariableScope.Config.Combat:SetUseBlackList[${This.Checked}]
         </OnLeftClick>
        </checkbox>

        <checkbox name='cbGameOverBlackList'>
         <X>10</X>
         <Y>70</Y>
         <Height>20</Height>
         <Width>100</Width>
         <Text>GameOver : User in black list</text>
         <AutoTooltip>If checked, use exit from EVE.</AutoTooltip>
         <OnLoad>
          if ${Script[EVEBot].VariableScope.Config.Combat.GameOverBlackList}
          {
           This:SetChecked
          }
         </OnLoad>
         <OnLeftClick>
          Script[EVEBot].VariableScope.Config.Combat:SetGameOverBlackList[${This.Checked}]
         </OnLeftClick>
        </checkbox>

        <checkbox name='cbMySingleLocal'>
         <X>10</X>
         <Y>90</Y>
         <Height>20</Height>
         <Width>100</Width>
         <Text>Single in location</text>
         <AutoTooltip>Will warp to next book if found PC.</AutoTooltip>
         <OnLoad>
          if ${Script[EVEBot].VariableScope.Config.Combat.MySingleLocal}
          {
           This:SetChecked
          }
         </OnLoad>
         <OnLeftClick>
          Script[EVEBot].VariableScope.Config.Combat:SetMySingleLocal[${This.Checked}]
         </OnLeftClick>
        </checkbox>


        <Text name='MarkerRegionText'>
         <X>10</X>
         <Y>130</Y>
         <Width>200</Width>
         <Height>10</Height>
         <Text>War Region:</Text>
         <AutoTooltip>Use region</AutoTooltip>
        </Text>

        <combobox name='MyWarRegion'>
         <X>120</X>
         <Y>128</Y>
         <Width>115</Width>
         <Height>15</Height>
         <FullHeight>90</FullHeight>
         <ButtonWidth>18</ButtonWidth>
         <Items>
          <Item Value='1'>Drones</Item>
          <Item Value='2'>Angel</Item>
          <Item Value='3'>Guristas</Item>
          <Item Value='4'>Sansha</Item>
         </Items>
         <OnSelect>
          Script[EVEBot].VariableScope.Config.Combat:SetMyWarRegion[${This.SelectedItem.Value}]
         </OnSelect>
         <OnLoad>
          This:SetSelection[${Script[EVEBot].VariableScope.Config.Combat.MyWarRegion}]
         </OnLoad>
        </combobox>

        <Text name='WaitSecSafeText'>
         <X>10</X>
         <Y>150</Y>
         <Width>200</Width>
         <Height>10</Height>
         <Text>Waiting Safe:</Text>
         <AutoTooltip>Waiting time a protected area</AutoTooltip>
        </Text>

        <combobox name='WaitSecSafe'>
         <X>120</X>
         <Y>148</Y>
         <Width>115</Width>
         <Height>15</Height>
         <FullHeight>90</FullHeight>
         <ButtonWidth>18</ButtonWidth>
         <Items>
          <Item Value='1'>2 min</Item>
          <Item Value='2'>4 min</Item>
          <Item Value='3'>6 min</Item>
          <Item Value='4'>8 min</Item>
         </Items>
         <OnSelect>
          Script[EVEBot].VariableScope.Config.Combat:SetWaitSecSafe[${This.SelectedItem.Value}]
         </OnSelect>
         <OnLoad>
          This:SetSelection[${Script[EVEBot].VariableScope.Config.Combat.WaitSecSafe}]
         </OnLoad>
        </combobox>
       </Children>
      </Frame>

      <Frame name='frmRatter'>
       <X>5</X>
       <Y>205</Y>
       <Height>123</Height>
       <Width>98%</Width>
       <Border>1</Border>
       <Children>
        <Text name='OrbitRangeLabel'>
         <X>10</X>
         <Y>10</Y>
         <Width>200</Width>
         <Height>10</Height>
         <Text>Ratter Ship:</Text>
         <AutoTooltip>Installation of the orbit for the ships</AutoTooltip>
        </Text>

        <combobox name='MyOrbitRange'>
         <X>120</X>
         <Y>8</Y>
         <Width>115</Width>
         <Height>15</Height>
         <FullHeight>60</FullHeight>
         <ButtonWidth>18</ButtonWidth>
         <Items>
          <Item Value='1'>Missales</Item>
          <Item Value='2'>Vagabond</Item>
          <Item Value='3'>Zealot</Item>
         </Items>
         <OnSelect>
          Script[EVEBot].VariableScope.Config.Combat:SetMyOrbitRange[${This.SelectedItem.Value}]
         </OnSelect>
         <OnLoad>
          This:SetSelection[${Script[EVEBot].VariableScope.Config.Combat.MyOrbitRange}]
         </OnLoad>
        </combobox>


        <checkbox name='cbDeactivateMWD'>
         <X>10</X>
         <Y>30</Y>
         <Height>20</Height>
         <Width>100</Width>
         <Text>Disable MWD in orbit</text>
         <AutoTooltip>If checked, use disable MWD.</AutoTooltip>
         <OnLoad>
          if ${Script[EVEBot].VariableScope.Config.Combat.DeactivateMWD}
          {
           This:SetChecked
          }
         </OnLoad>
         <OnLeftClick>
          Script[EVEBot].VariableScope.Config.Combat:SetDeactivateMWD[${This.Checked}]
         </OnLeftClick>
        </checkbox>

        <checkbox name='cbFullDeactivateOrbit'>
         <X>10</X>
         <Y>50</Y>
         <Height>20</Height>
         <Width>100</Width>
         <Text>Full disable fly orbit</text>
         <AutoTooltip>If checked, use disable orbit fly.</AutoTooltip>
         <OnLoad>
          if ${Script[EVEBot].VariableScope.Config.Combat.FullDeactivateOrbit}
          {
           This:SetChecked
          }
         </OnLoad>
         <OnLeftClick>
          Script[EVEBot].VariableScope.Config.Combat:SetFullDeactivateOrbit[${This.Checked}]
         </OnLeftClick>
        </checkbox>


        <checkbox name='cbLaunchCombatDrones'>
         <X>10</X>
         <Y>70</Y>
         <Height>20</Height>
         <Width>130</Width>
         <Text>Launch Drones for any targets</text>
         <AutoTooltip>Launch and Use Combat Drones</AutoTooltip>
         <OnLoad>
          if ${Script[EVEBot].VariableScope.Config.Combat.LaunchCombatDrones}
          {
           This:SetChecked
          }
         </OnLoad>
         <OnLeftClick>
          Script[EVEBot].VariableScope.Config.Combat:SetLaunchCombatDrones[${This.Checked}]
         </OnLeftClick>
        </checkbox>

        <checkbox name='cbLaunchDronesSpec'>
         <X>28</X>
         <Y>90</Y>
         <Height>20</Height>
         <Width>130</Width>
         <Text>Combat Drones for Spec Targets</text>
         <AutoTooltip>Launch and Use Combat Drones ONLY FOR SPECIAL TARGETs!</AutoTooltip>
         <OnLoad>
          if ${Script[EVEBot].VariableScope.Config.Combat.LaunchDronesSpec}
          {
           This:SetChecked
          }
         </OnLoad>
         <OnLeftClick>
          Script[EVEBot].VariableScope.Config.Combat:SetLaunchDronesSpec[${This.Checked}]
         </OnLeftClick>
        </checkbox>

        <checkbox name='cbChainSpawns'>
         <X>260</X>
         <Y>10</Y>
         <Height>20</Height>
         <Width>100</Width>
         <Text>Chain Spawns</text>
         <AutoTooltip>Will chain high value spawns if checked</AutoTooltip>
         <OnLoad>
          if ${Script[EVEBot].VariableScope.Config.Combat.ChainSpawns}
          {
           This:SetChecked
          }
         </OnLoad>
         <OnLeftClick>
           Script[EVEBot].VariableScope.Config.Combat:SetChainSpawns[${This.Checked}]
         </OnLeftClick>
        </checkbox>
        <checkbox name='cbChainSolo'>
         <X>260</X>
         <Y>30</Y>
         <Height>20</Height>
         <Width>100</Width>
         <Text>Chain Spawns (while alone)</text>
         <AutoTooltip>If not checked chaining will be suspended if you are alone in a system.</AutoTooltip>
         <OnLoad>
          if ${Script[EVEBot].VariableScope.Config.Combat.ChainSolo}
          {
           This:SetChecked
          }
         </OnLoad>
         <OnLeftClick>
           Script[EVEBot].VariableScope.Config.Combat:SetChainSolo[${This.Checked}]
         </OnLeftClick>
        </checkbox>
        <Text name='lblMinChainBounty'>
         <X>260</X>
         <Y>55</Y>
         <Width>200</Width>
         <Height>18</Height>
         <Text>Min.Chain Bounty:</Text>
         <AutoTooltip>NPC ships with a bounty above this value will be chained (if enabled).</AutoTooltip>
        </Text>
        <Textentry name='tbMinChainBounty'>
         <X>390</X>
         <Y>53</Y>
         <Width>90</Width>
         <Height>18</Height>
         <MaxLength>10</MaxLength>
         <OnLoad>
          This:SetText[${Script[EVEBot].VariableScope.Config.Combat.MinChainBounty}]
         </OnLoad>
         <OnChange>
          if ${This.Text.Length} > 0
          {
           Script[EVEBot].VariableScope.Config.Combat:SetMinChainBounty[${Int[${This.Text}]}]
          }
         </OnChange>
        </Textentry>

        <Textentry name='MinimumDronesInSpace'>
         <X>260</X>
         <Y>90</Y>
         <Width>30</Width>
         <Height>18</Height>
         <MaxLength>2</MaxLength>
         <OnLoad>
          This:SetText[${Script[EVEBot].VariableScope.Config.Combat.MinimumDronesInSpace}]
         </OnLoad>
         <OnChange>
          if ${This.Text.Length} > 0
          {
           Script[EVEBot].VariableScope.Config.Combat:SetMinimumDronesInSpace[${Int[${This.Text}]}]
          }
         </OnChange>
        </Textentry>

        <Text name='MinimumDronesInSpaceText'>
         <X>294</X>
         <Y>92</Y>
         <Width>200</Width>
         <Height>10</Height>
         <Text>Minimum Drones in Space</Text>
         <AutoTooltip>We will return to base when available drones falls below this number</AutoTooltip>
        </Text>

       </Children>
      </Frame>
     </tab>





     <tab name='Labels'>

      <Text name='Label1'>
       <X>10</X>
       <Y>10</Y>
       <Width>150</Width>
       <Height>10</Height>
       <Text>Bookmark Prefixes</Text>
      </Text>
<!-- safe spots prefix -->
      <Text name='SafeSpotsLabel'>
       <X>15</X>
       <Y>28</Y>
       <Width>200</Width>
       <Height>10</Height>
       <Text>Safe Spots:</Text>
       <AutoTooltip>The prefix for safe spot bookmark names.</AutoTooltip>
      </Text>
      <Textentry name='SafeSpotPrefix'>
       <X>100</X>
       <Y>25</Y>
       <Width>80</Width>
       <Height>18</Height>
       <MaxLength>10</MaxLength>
       <OnLoad>
        This:SetText[${Script[EVEBot].VariableScope.Config.Labels.SafeSpotPrefix}]
       </OnLoad>
       <OnChange>
        if ${This.Text.Length} > 0
        {
         Script[EVEBot].VariableScope.Config.Labels:SetSafeSpotPrefix[${This.Text}]
        }
        else
        {
         Script[EVEBot].VariableScope.Config.Labels:SetSafeSpotPrefix[""]
        }
       </OnChange>
      </Textentry>

<!-- ammo label -->
      <Text name='AmmoLabel'>
       <X>15</X>
       <Y>48</Y>
       <Width>200</Width>
       <Height>10</Height>
       <Text>Ammo Spot:</Text>
       <AutoTooltip>The name for ammo spot bookmark.</AutoTooltip>
      </Text>
      <Textentry name='AmmoSpot'>
       <X>100</X>
       <Y>45</Y>
       <Width>80</Width>
       <Height>18</Height>
       <MaxLength>10</MaxLength>
       <OnLoad>
        This:SetText[${Script[EVEBot].VariableScope.Config.Labels.AmmoSpot}]
       </OnLoad>
       <OnChange>
        if ${This.Text.Length} > 0
        {
         Script[EVEBot].VariableScope.Config.Labels:SetAmmoSpot[${This.Text}]
        }
        else
        {
         Script[EVEBot].VariableScope.Config.Labels:SetAmmoSpot[""]
        }
       </OnChange>
      </Textentry>

<!-- anomalies list -->
      <Text name='Label2'>
       <X>10</X>
       <Y>72</Y>
       <Width>200</Width>
       <Height>10</Height>
       <Text>Allowed anomalies list:</Text>
      </Text>
      <TextEntry name='tbAddAllowedAnomaly'>
       <X>10</X>
       <Y>85</Y>
       <Width>220</Width>
       <Height>18</Height>
       <MaxLength>50</MaxLength>
      </Textentry>
      <button Name='AddAllowedAnomaly' template='EVEskin.Add.Texture'>
       <X>232</X>
       <Y>86</Y>
       <Width>16</Width>
       <Height>16</Height>
       <OnLeftClick>
        if !${Script[EVEBot].VariableScope.Config.AllowedAnomalies.IsListed[${UIElement[tbAddAllowedAnomaly@Labels@EVEBotOptionsTab@EVEBot].Text}]}
         UIElement[AllowedAnomalies@Labels@EVEBotOptionsTab@EVEBot]:AddItem[${UIElement[tbAddAllowedAnomaly@Labels@EVEBotOptionsTab@EVEBot].Text}]
        Script[EVEBot].VariableScope.Config.AllowedAnomalies:AddAllowedAnomaly[${UIElement[tbAddAllowedAnomaly@Labels@EVEBotOptionsTab@EVEBot].Text}]
        UIElement[tbAddAllowedAnomaly@Labels@EVEBotOptionsTab@EVEBot]:SetText[]
       </OnLeftClick>
      </button>
      <button Name='RemoveAllowedAnomaly' template='EVEskin.Remove.Texture'>
       <X>250</X>
       <Y>86</Y>
       <Width>16</Width>
       <Height>16</Height>
       <OnLeftClick>
        UIElement[AllowedAnomalies@Labels@EVEBotOptionsTab@EVEBot].ItemByText[${UIElement[tbAddAllowedAnomaly@Labels@EVEBotOptionsTab@EVEBot].Text}]:Remove
        Script[EVEBot].VariableScope.Config.AllowedAnomalies:RemoveAllowedAnomaly[${UIElement[tbAddAllowedAnomaly@Labels@EVEBotOptionsTab@EVEBot].Text}]
       </OnLeftClick>
      </button>
      <listbox Name='AllowedAnomalies'>
       <X>10</X>
       <Y>105</Y>
       <Width>256</Width>
       <Height>130</Height>
       <SelectMultiple>0</SelectMultiple>
       <Sort>Text</Sort>
       <AutoTooltip>Allowed anomalies list. All other will be ignored.</AutoTooltip>
       <OnLoad>
        Script[EVEBot].VariableScope.Config.AllowedAnomalies:RefreshAllowedAnomalies
        variable iterator InfoFromSettings
        Script[EVEBot].VariableScope.Config.AllowedAnomalies.AllowedAnomalyNames:GetIterator[InfoFromSettings]
        if ${InfoFromSettings:First(exists)}
        {
         do
         {
          This:AddItem[${InfoFromSettings.Value.Name}]
         }
         while ${InfoFromSettings:Next(exists)}
        }
       </OnLoad>
       <OnSelect>
        UIElement[tbAddAllowedAnomaly@Labels@EVEBotOptionsTab@EVEBot]:SetText[${This.SelectedItem.Text}]
       </OnSelect>
      </listbox>


<!--
      <Text name='Mark300'>
       <X>25</X>
       <Y>65</Y>
       <Width>600</Width>
       <Height>10</Height>
       <Text>------------------------------------------------------</Text>
      </Text>

      <Text name='Label11'>
       <X>10</X>
       <Y>85</Y>
       <Width>200</Width>
       <Height>10</Height>
       <Text>Ratter Preference</Text>
      </Text>

      <Text name='RatterPointsLabel'>
       <X>25</X>
       <Y>108</Y>
       <Width>200</Width>
       <Height>10</Height>
       <Text>Book prefix:</Text>
       <AutoTooltip>The books prefix for Ratter mode.</AutoTooltip>
      </Text>

      <Textentry name='RatterPointsPrefix'>
       <X>130</X>
       <Y>105</Y>
       <Width>170</Width>
       <Height>18</Height>
       <MaxLength>20</MaxLength>
       <OnLoad>
        This:SetText[${Script[EVEBot].VariableScope.Config.Labels.RatterPointsPrefix}]
       </OnLoad>
       <OnChange>
        if ${This.Text.Length} > 0
        {
         Script[EVEBot].VariableScope.Config.Labels:SetRatterPointsPrefix[${This.Text}]
        }
        else
        {
         Script[EVEBot].VariableScope.Config.Labels:SetRatterPointsPrefix[""]
        }
       </OnChange>
      </Textentry>

      <checkbox name='cbRatterUseMyBook'>
        <X>330</X>
        <Y>105</Y>
        <Height>20</Height>
        <Width>100</Width>
        <Text>Ratter use my Bookmarks</text>
        <AutoTooltip>If checked, use a point in my book.</AutoTooltip>
        <OnLoad>
         if ${Script[EVEBot].VariableScope.Config.Labels.RatterUseMyBook}
         {
          This:SetChecked
         }
        </OnLoad>
        <OnLeftClick>
          Script[EVEBot].VariableScope.Config.Labels:SetRatterUseMyBook[${This.Checked}]
        </OnLeftClick>
      </checkbox>

      <Text name='Mark400'>
       <X>25</X>
       <Y>135</Y>
       <Width>600</Width>
       <Height>10</Height>
       <Text>------------------------------------------------------</Text>
      </Text>


      <Text name='Label200'>
       <X>10</X>
       <Y>160</Y>
       <Width>200</Width>
       <Height>10</Height>
       <Text>Bomzh Preferences</Text>
      </Text>

      <Text name='LootLabel'>
       <X>25</X>
       <Y>183</Y>
       <Width>200</Width>
       <Height>10</Height>
       <Text>Loots prefix</Text>
       <AutoTooltip>The prefix for looting points.</AutoTooltip>
      </Text>
      <Textentry name='LootPrefix'>
       <X>130</X>
       <Y>182</Y>
       <Width>100</Width>
       <Height>18</Height>
       <MaxLength>20</MaxLength>
       <OnLoad>
        This:SetText[${Script[EVEBot].VariableScope.Config.Labels.LootPrefix}]
       </OnLoad>
       <OnChange>
        if ${This.Text.Length} > 0
        {
         Script[EVEBot].VariableScope.Config.Labels:SetLootPrefix[${This.Text}]
        }
        else
        {
         Script[EVEBot].VariableScope.Config.Labels:SetLootPrefix[""]
        }
       </OnChange>
      </Textentry>

      <checkbox name='cbWreckSalvage'>
        <X>25</X>
        <Y>203</Y>
        <Height>20</Height>
        <Width>100</Width>
        <Text>Run Salvage Wrecks</text>
        <AutoTooltip>If checked, run salvage wrecks.</AutoTooltip>
        <OnLoad>
         if ${Script[EVEBot].VariableScope.Config.Labels.WreckSalvage}
         {
          This:SetChecked
         }
        </OnLoad>
        <OnLeftClick>
          Script[EVEBot].VariableScope.Config.Labels:SetWreckSalvage[${This.Checked}]
        </OnLeftClick>
      </checkbox>

      <Text name='LootSizeWreckLabel'>
       <X>260</X>
       <Y>183</Y>
       <Width>200</Width>
       <Height>10</Height>
       <Text>Loot Size:</Text>
       <AutoTooltip>Installation size of loot wrecks</AutoTooltip>
      </Text>

      <combobox name='LootSizeWreck'>
       <X>365</X>
       <Y>183</Y>
       <Width>120</Width>
       <Height>15</Height>
       <FullHeight>60</FullHeight>
       <ButtonWidth>18</ButtonWidth>
       <Items>
        <Item Value='1'>Large</Item>
        <Item Value='2'>Large+Medium</Item>
        <Item Value='3'>Full</Item>
       </Items>
       <OnSelect>
        Script[EVEBot].VariableScope.Config.Labels:SetLootSizeWreck[${This.SelectedItem.Value}]
       </OnSelect>
       <OnLoad>
        This:SetSelection[${Script[EVEBot].VariableScope.Config.Labels.LootSizeWreck}]
       </OnLoad>
      </combobox>

      <Text name='SalvageWreckLabel'>
       <X>260</X>
       <Y>206</Y>
       <Width>200</Width>
       <Height>10</Height>
       <Text>Salvage Size:</Text>
       <AutoTooltip>Installation size of salvage wrecks</AutoTooltip>
      </Text>

      <combobox name='SalvageSizeWreck'>
       <X>365</X>
       <Y>205</Y>
       <Width>120</Width>
       <Height>15</Height>
       <FullHeight>60</FullHeight>
       <ButtonWidth>18</ButtonWidth>
       <Items>
        <Item Value='1'>Large</Item>
        <Item Value='2'>Large+Medium</Item>
        <Item Value='3'>Full</Item>
       </Items>
       <OnSelect>
        Script[EVEBot].VariableScope.Config.Labels:SetSalvageSizeWreck[${This.SelectedItem.Value}]
       </OnSelect>
       <OnLoad>
        This:SetSelection[${Script[EVEBot].VariableScope.Config.Labels.SalvageSizeWreck}]
       </OnLoad>
      </combobox>


      <Text name='Mark500'>
       <X>25</X>
       <Y>225</Y>
       <Width>600</Width>
       <Height>10</Height>
       <Text>------------------------------------------------------</Text>
      </Text>
-->
     </tab>







;_____________________________________________________________________________________________________ TAB  COORDS   --=START=--________________________________________________________________________
     <tab name='Cords'>
      <Text name='Coordstitle'>
       <X>10</X>
       <Y>10</Y>
       <Width>450</Width>
       <Height>10</Height>
       <Text>${Mouse}      COORDINATES OF SCANNER BUTTONS </Text>
      </Text>

      <Text name='Scanbutton'>
       <X>10</X>
       <Y>40</Y>
       <Width>100</Width>
       <Height>10</Height>
       <Text>Scan</Text>
       <AutoTooltip>      X : Y coordinates of SCAN button in scanner</AutoTooltip>
      </Text>
      <Textentry name='scanbuttonX'>
       <X>70</X>
       <Y>40</Y>
       <Width>40</Width>
       <Height>18</Height>
       <MaxLength>10</MaxLength>
       <OnLoad>
        This:SetText[${Script[EVEBot].VariableScope.Config.Coords.ScanX}]
       </OnLoad>
       <OnChange>
        if ${This.Text.Length} > 0
        {
         Script[EVEBot].VariableScope.Config.Coords:SetScanX[${This.Text}]
        }
        else
        {
         Script[EVEBot].VariableScope.Config.Coords:SetScanX["0"]
        }
       </OnChange>




      </Textentry>
      <Textentry name='scanbuttonY'>
       <X>115</X>
       <Y>40</Y>
       <Width>40</Width>
       <Height>18</Height>
       <MaxLength>10</MaxLength>
       <OnLoad>
        This:SetText[${Script[EVEBot].VariableScope.Config.Coords.ScanY}]
       </OnLoad>
       <OnChange>
        if ${This.Text.Length} > 0
        {
         Script[EVEBot].VariableScope.Config.Coords:SetScanY[${This.Text}]
        }
        else
        {
         Script[EVEBot].VariableScope.Config.Coords:SetScanY["0"]
        }
       </OnChange>
      </Textentry>



      <Text name='Recoverbutton'>
       <X>10</X>
       <Y>60</Y>
       <Width>100</Width>
       <Height>10</Height>
       <Text>Recover</Text>
       <AutoTooltip>      X : Y coordinates of RECOVER button in scanner</AutoTooltip>
      </Text>
      <Textentry name='RecoverbuttonX'>
       <X>70</X>
       <Y>60</Y>
       <Width>40</Width>
       <Height>18</Height>
       <MaxLength>10</MaxLength>
       <OnLoad>
        This:SetText[${Script[EVEBot].VariableScope.Config.Coords.RecoverX}]
       </OnLoad>
       <OnChange>
        if ${This.Text.Length} > 0
        {
         Script[EVEBot].VariableScope.Config.Coords:SetRecoverX[${This.Text}]
        }
        else
        {
         Script[EVEBot].VariableScope.Config.Coords:SetRecoverX["0"]
        }
       </OnChange>
      </Textentry>
      <Textentry name='RecoverbuttonY'>
       <X>115</X>
       <Y>60</Y>
       <Width>40</Width>
       <Height>18</Height>
       <MaxLength>10</MaxLength>
       <OnLoad>
       This:SetText[${Script[EVEBot].VariableScope.Config.Coords.RecoverY}]
       </OnLoad>
       <OnChange>
        if ${This.Text.Length} > 0
        {
         Script[EVEBot].VariableScope.Config.Coords:SetRecoverY[${This.Text}]
        }
        else
        {
         Script[EVEBot].VariableScope.Config.Coords:SetRecoverY["0"]
        }
       </OnChange>
      </Textentry>




      <Text name='Reconnectbutton'>
       <X>10</X>
       <Y>80</Y>
       <Width>100</Width>
       <Height>10</Height>
       <Text>Page</Text>
       <AutoTooltip>X : Y coordinates of SYSTEM SCANNER page in scanner window</AutoTooltip>
      </Text>
      <Textentry name='ReconnectbuttonX'>
       <X>70</X>
       <Y>80</Y>
       <Width>40</Width>
       <Height>18</Height>
       <MaxLength>10</MaxLength>
      <OnLoad>
        This:SetText[${Script[EVEBot].VariableScope.Config.Coords.ReConX}]
       </OnLoad>
       <OnChange>
        if ${This.Text.Length} > 0
        {
         Script[EVEBot].VariableScope.Config.Coords:SetReConX[${This.Text}]
        }
        else
        {
         Script[EVEBot].VariableScope.Config.Coords:SetReConX["0"]
        }
       </OnChange>
      </Textentry>
      <Textentry name='ReconnectbuttonY'>
       <X>115</X>
       <Y>80</Y>
       <Width>40</Width>
       <Height>18</Height>
       <MaxLength>10</MaxLength>
       <OnLoad>
        This:SetText[${Script[EVEBot].VariableScope.Config.Coords.ReConY}]
       </OnLoad>
       <OnChange>
        if ${This.Text.Length} > 0
        {
         Script[EVEBot].VariableScope.Config.Coords:SetReConY[${This.Text}]
        }
        else
        {
         Script[EVEBot].VariableScope.Config.Coords:SetReConY["0"]
        }
       </OnChange>
      </Textentry>


      <Text name='FirstProbebutton'>
       <X>160</X>
       <Y>40</Y>
       <Width>100</Width>
       <Height>10</Height>
       <Text>sh m arr</Text>
       <AutoTooltip>      X : Y coordinates of ship maintenance array</AutoTooltip>
      </Text>
      <Textentry name='FirstProbebuttonX'>
       <X>240</X>
       <Y>40</Y>
       <Width>40</Width>
       <Height>18</Height>
       <MaxLength>10</MaxLength>
       <OnLoad>
        This:SetText[${Script[EVEBot].VariableScope.Config.Coords.1stProbeX}]
       </OnLoad>
       <OnChange>
        if ${This.Text.Length} > 0
        {
         Script[EVEBot].VariableScope.Config.Coords:Set1stProbeX[${This.Text}]
        }
        else
        {
         Script[EVEBot].VariableScope.Config.Coords:Set1stProbeX["0"]
        }
       </OnChange>
      </Textentry>
      <Textentry name='FirstProbebuttonY'>
       <X>285</X>
       <Y>40</Y>
       <Width>40</Width>
       <Height>18</Height>
       <MaxLength>10</MaxLength>
       <OnLoad>
        This:SetText[${Script[EVEBot].VariableScope.Config.Coords.1stProbeY}]
       </OnLoad>
       <OnChange>
        if ${This.Text.Length} > 0
        {
         Script[EVEBot].VariableScope.Config.Coords:Set1stProbeY[${This.Text}]
        }
        else
        {
         Script[EVEBot].VariableScope.Config.Coords:Set1stProbeY["0"]
        }
       </OnChange>
      </Textentry>




      <Text name='FirstResultbutton'>
       <X>160</X>
       <Y>60</Y>
       <Width>100</Width>
       <Height>10</Height>
       <Text>1st Result</Text>
       <AutoTooltip>      X : Y coordinates of 1st RESULT LINE in scanner</AutoTooltip>
      </Text>
      <Textentry name='FirstResultbuttonX'>
       <X>240</X>
       <Y>60</Y>
       <Width>40</Width>
       <Height>18</Height>
       <MaxLength>10</MaxLength>
       <OnLoad>
        This:SetText[${Script[EVEBot].VariableScope.Config.Coords.1stResultX}]
       </OnLoad>
       <OnChange>
        if ${This.Text.Length} > 0
        {
         Script[EVEBot].VariableScope.Config.Coords:Set1stResultX[${This.Text}]
        }
        else
        {
         Script[EVEBot].VariableScope.Config.Coords:Set1stResultX["0"]
        }
       </OnChange>
      </Textentry>
      <Textentry name='FirstResultbuttonY'>
       <X>285</X>
       <Y>60</Y>
       <Width>40</Width>
       <Height>18</Height>
       <MaxLength>10</MaxLength>
       <OnLoad>
        This:SetText[${Script[EVEBot].VariableScope.Config.Coords.1stResultY}]
       </OnLoad>
       <OnChange>
        if ${This.Text.Length} > 0
        {
         Script[EVEBot].VariableScope.Config.Coords:Set1stResultY[${This.Text}]
        }
        else
        {
         Script[EVEBot].VariableScope.Config.Coords:Set1stResultY["0"]
        }
       </OnChange>
      </Textentry>

      <Text name='ProbeLauncherbutton'>
       <X>160</X>
       <Y>80</Y>
       <Width>110</Width>
       <Height>10</Height>
       <Text>ProbeLauncher</Text>
       <AutoTooltip>      ProbeLauncherHotKey (F1-F8)</AutoTooltip>
      </Text>
      <Textentry name='ProbeLauncherbuttonX'>
       <X>270</X>
       <Y>80</Y>
       <Width>40</Width>
       <Height>18</Height>
       <MaxLength>10</MaxLength>
       <OnLoad>
        This:SetText[${Script[EVEBot].VariableScope.Config.Coords.ProbeLauncher}]
       </OnLoad>
       <OnChange>
        if ${This.Text.Length} > 0
        {
         Script[EVEBot].VariableScope.Config.Coords:SetProbeLauncher[${This.Text}]
        }
        else
        {
         Script[EVEBot].VariableScope.Config.Coords:SetProbeLauncher["F8"]
        }
       </OnChange>
      </Textentry>




      <Text name='MouseDelay2'>
       <X>330</X>
       <Y>40</Y>
       <Width>115</Width>
       <Height>10</Height>
       <Text>MouseDelay(MS)</Text>
       <AutoTooltip>      Delay between mouse move and clicks (in MSec)</AutoTooltip>
      </Text>
      <Textentry name='MouseDelay'>
       <X>450</X>
       <Y>40</Y>
       <Width>40</Width>
       <Height>18</Height>
       <MaxLength>10</MaxLength>
       <OnLoad>
        This:SetText[${Script[EVEBot].VariableScope.Config.Coords.MouseDelay}]
       </OnLoad>
       <OnChange>
        if ${This.Text.Length} > 0
        {
         Script[EVEBot].VariableScope.Config.Coords:SetMouseDelay[${This.Text}]
        }
        else
        {
         Script[EVEBot].VariableScope.Config.Coords:SetMouseDelay["1"]
        }
       </OnChange>
      </Textentry>







      <Text name='AnalyzeTime2'>
       <X>310</X>
       <Y>80</Y>
       <Width>135</Width>
       <Height>10</Height>
       <Text>AnalyzingTime(MS)</Text>
       <AutoTooltip>      Scanner AnalyzingTime  (in MSec)</AutoTooltip>
      </Text>
      <Textentry name='AnalyzeTime'>
       <X>450</X>
       <Y>80</Y>
       <Width>40</Width>
       <Height>18</Height>
       <MaxLength>10</MaxLength>
       <OnLoad>
        This:SetText[${Script[EVEBot].VariableScope.Config.Coords.AnalyzeTime}]
       </OnLoad>
       <OnChange>
        if ${This.Text.Length} > 0
        {
         Script[EVEBot].VariableScope.Config.Coords:SetAnalyzeTime[${This.Text}]
        }
        else
        {
         Script[EVEBot].VariableScope.Config.Coords:SetAnalyzeTime["300"]
        }
       </OnChange>
      </Textentry>









      <Text name='AnomalyName'>
       <X>10</X>
       <Y>120</Y>
       <Width>100</Width>
       <Height>10</Height>
       <Text>AnomalyNAME</Text>
       <AutoTooltip>      Anomaly NAME to Do</AutoTooltip>
      </Text>
      <Textentry name='AnomalyNameX'>
       <X>120</X>
       <Y>120</Y>
       <Width>370</Width>
       <Height>18</Height>
       <MaxLength>40</MaxLength>
       <OnLoad>
        This:SetText[${Script[EVEBot].VariableScope.Config.Coords.AnomalyName}]
       </OnLoad>
       <OnChange>
        if ${This.Text.Length} > 0
        {
         Script[EVEBot].VariableScope.Config.Coords:SetAnomalyName[${This.Text}]
        }
        else
        {
         Script[EVEBot].VariableScope.Config.Coords:SetAnomalyName["Type Name Here"]
        }
       </OnChange>
      </Textentry>








       <Text name='WarpRange2'>
       <X>10</X>
       <Y>140</Y>
       <Width>100</Width>
       <Height>10</Height>
       <Text>WarpRange</Text>
       <AutoTooltip>      Warp Range to Plex</AutoTooltip>
      </Text>
      <Textentry name='WarpRange'>
       <X>120</X>
       <Y>140</Y>
       <Width>80</Width>
       <Height>18</Height>
       <MaxLength>40</MaxLength>
       <OnLoad>
        This:SetText[${Script[EVEBot].VariableScope.Config.Coords.WarpRange}]
       </OnLoad>
       <OnChange>
        if ${This.Text.Length} > 0
        {
         Script[EVEBot].VariableScope.Config.Coords:SetWarpRange[${This.Text}]
        }
        else
        {
         Script[EVEBot].VariableScope.Config.Coords:SetWarpRange["0"]
        }
       </OnChange>
      </Textentry>

      <checkbox name='cbOrbitAnomaly'>
       <X>200</X>
       <Y>140</Y>
       <Height>20</Height>
       <Width>100</Width>
       <Text>Orbiting</text>
       <AutoTooltip>   Orbit Center of Anomaly?</AutoTooltip>
       <OnLoad>
        if ${Script[EVEBot].VariableScope.Config.Coords.OrbitAnomaly}
        {
         This:SetChecked
        }
       </OnLoad>
       <OnLeftClick>
         Script[EVEBot].VariableScope.Config.Coords:SetOrbitAnomaly[${This.Checked}]
       </OnLeftClick>
      </checkbox>
      <Text name='OrbitDistance2'>
       <X>265</X>
       <Y>140</Y>
       <Width>110</Width>
       <Height>10</Height>
       <Text>OrbitDistance</Text>
       <AutoTooltip>      Orbit Distance in Plex</AutoTooltip>
      </Text>
      <Textentry name='OrbitDistance'>
       <X>375</X>
       <Y>140</Y>
       <Width>80</Width>
       <Height>18</Height>
       <MaxLength>40</MaxLength>
       <OnLoad>
        This:SetText[${Script[EVEBot].VariableScope.Config.Coords.OrbitDistance}]
       </OnLoad>
       <OnChange>
        if ${This.Text.Length} > 0
        {
         Script[EVEBot].VariableScope.Config.Coords:SetOrbitDistance[${This.Text}]
        }
        else
        {
         Script[EVEBot].VariableScope.Config.Coords:SetOrbitDistance["130000"]
        }
       </OnChange>
      </Textentry>

      <checkbox name='cbAmmoReload'>
       <X>100</X>
       <Y>100</Y>
       <Height>20</Height>
       <Width>100</Width>
       <Text>AmmoReload</text>
       <AutoTooltip>   Relaod ammo from POS?</AutoTooltip>
       <OnLoad>
        if ${Script[EVEBot].VariableScope.Config.Coords.AmmoReload}
        {
         This:SetChecked
        }
       </OnLoad>
       <OnLeftClick>
         Script[EVEBot].VariableScope.Config.Coords:SetAmmoReload[${This.Checked}]
       </OnLeftClick>
      </checkbox>
      <Textentry name='AmmoReloadValue'>
       <X>210</X>
       <Y>100</Y>
       <Width>80</Width>
       <Height>18</Height>
       <MaxLength>40</MaxLength>
       <OnLoad>
        This:SetText[${Script[EVEBot].VariableScope.Config.Coords.AmmoReloadValue}]
       </OnLoad>
       <OnChange>
        if ${This.Text.Length} > 0
        {
         Script[EVEBot].VariableScope.Config.Coords:SetAmmoReloadValue[${This.Text}]
        }
        else
        {
         Script[EVEBot].VariableScope.Config.Coords:SetAmmoReloadValue["1000"]
        }
       </OnChange>
      </Textentry>

      <checkbox name='cbSupport'>
       <X>5</X>
       <Y>160</Y>
       <Height>20</Height>
       <Width>50</Width>
       <Text>Support?</text>
       <AutoTooltip>   Work As Support</AutoTooltip>
       <OnLoad>
        if ${Script[EVEBot].VariableScope.Config.Coords.Support}
        {
         This:SetChecked
        }
       </OnLoad>
       <OnLeftClick>
         Script[EVEBot].VariableScope.Config.Coords:SetSupport[${This.Checked}]
       </OnLeftClick>
      </checkbox>


      <Textentry name='PilotToSupport'>
       <X>80</X>
       <Y>160</Y>
       <Width>80</Width>
       <Height>18</Height>
       <MaxLength>40</MaxLength>
       <OnLoad>
        This:SetText[${Script[EVEBot].VariableScope.Config.Coords.PilotToSupport}]
       </OnLoad>
       <OnChange>
        if ${This.Text.Length} > 0
        {
         Script[EVEBot].VariableScope.Config.Coords:SetPilotToSupport[${This.Text}]
        }
        else
        {
         Script[EVEBot].VariableScope.Config.Coords:SetPilotToSupport[""]
        }
       </OnChange>
      </Textentry>

      <checkbox name='Sanctum1'>
       <X>5</X>
       <Y>180</Y>
       <Height>20</Height>
       <Width>50</Width>
       <Text>Station</text>
       <AutoTooltip>  Do Sanctum With Station</AutoTooltip>
       <OnLoad>
        if ${Script[EVEBot].VariableScope.Config.Coords.Sanctum1}
        {
         This:SetChecked
        }
       </OnLoad>
       <OnLeftClick>
         Script[EVEBot].VariableScope.Config.Coords:SetSanctum1[${This.Checked}]
       </OnLeftClick>
      </checkbox>

      <checkbox name='Sanctum2'>
       <X>5</X>
       <Y>200</Y>
       <Height>20</Height>
       <Width>50</Width>
       <Text>Rings</text>
       <AutoTooltip>  Do Sanctum With Rings</AutoTooltip>
       <OnLoad>
        if ${Script[EVEBot].VariableScope.Config.Coords.Sanctum2}
        {
         This:SetChecked
        }
       </OnLoad>
       <OnLeftClick>
         Script[EVEBot].VariableScope.Config.Coords:SetSanctum2[${This.Checked}]
       </OnLeftClick>
      </checkbox>

      <Text name='WaitBeforeScanText'>
       <X>100</X>
       <Y>180</Y>
       <Width>110</Width>
       <Height>10</Height>
       <Text>WaitBeforeScan</Text>
       <AutoTooltip>      WaitBeforeScan</AutoTooltip>
      </Text>

      <Textentry name='WaitBeforeScan'>
       <X>100</X>
       <Y>200</Y>
       <Width>80</Width>
       <Height>18</Height>
       <MaxLength>40</MaxLength>
       <OnLoad>
        This:SetText[${Script[EVEBot].VariableScope.Config.Coords.WaitBeforeScan}]
       </OnLoad>
       <OnChange>
        if ${This.Text.Length} > 0
        {
         Script[EVEBot].VariableScope.Config.Coords:SetWaitBeforeScan[${This.Text}]
        }
        else
        {
         Script[EVEBot].VariableScope.Config.Coords:SetWaitBeforeScan["0"]
        }
       </OnChange>
      </Textentry>




      <Text name='SmartBombText'>
       <X>220</X>
       <Y>180</Y>
       <Width>110</Width>
       <Height>10</Height>
       <Text>SmartBomb</Text>
       <AutoTooltip>      SB activation range</AutoTooltip>
      </Text>

      <Textentry name='SmartBombRange'>
       <X>220</X>
       <Y>200</Y>
       <Width>80</Width>
       <Height>18</Height>
       <MaxLength>40</MaxLength>
       <OnLoad>
        This:SetText[${Script[EVEBot].VariableScope.Config.Coords.SmartBombRange}]
       </OnLoad>
       <OnChange>
        if ${This.Text.Length} > 0
        {
         Script[EVEBot].VariableScope.Config.Coords:SetSmartBombRange[${This.Text}]
        }
        else
        {
         Script[EVEBot].VariableScope.Config.Coords:SetSmartBombRange["0"]
        }
       </OnChange>
      </Textentry>

     </tab>
;--------------------------------------------------------------------------------------------------------------------------------------------------TAB COORDS  --= END =-- ----------------------------------------------------------------------------------------------------------------------
    </Tabs>
   </tabcontrol>
  </Children>
 </window>
</ISUI>
